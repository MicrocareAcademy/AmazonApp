@using AmazonApp.Areas
@using AmazonApp.Areas.Account.Models
@using AmazonApp.Areas.Inventory.Controllers
@using AmazonApp.Entities
@model IList<Category>


@{
    ViewData["Title"] = "CategoriesList";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@if (Model != null && Model.Count > 0)
{
    <h1>Categories List  <a href="@Url.Action("AddCategory","Category")" class="btn btn-primary">Add Category</a></h1>

    <div class="row">
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th>CategoryName </th>
                    <th>CategoryDescription</th>
                    <th>CategoryStatus</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in Model)
                {
                    <tr id="category.CategoryID">
                        <td>@category.CategoryName</td>
                        <td>@category.CategoryDescription</td>
                        <td>@category.CategoryStatus</td>
                        <td>
                            <a href="@Url.Action("EditCategory","Category",new{CategoryID = category.CategoryId})">Edit</a>
                            |
                            <a href="javascript:0;" onclick="DeleteCategory(@category.CategoryId)">Delete</a>

                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
}
else
{
    <h2>No Categories Data ..</h2>
}

<script type="text/javascript">

    function DeleteCategory(CategoryId) {

        var url = "https://localhost:7214/Category/DeleteCategory";
        var parameters = { CategoryId: CategoryId };

        $.post(url, parameters, function (data) {

            alert("Category with Id:" + CategoryId + " was deleted");

            $("tr#" + CategoryId).remove();

        });

    }


</script>



